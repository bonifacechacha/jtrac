<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- application context / root Spring IoC container config for JTrac -->

<beans>

    <!-- Configurer that replaces ${...} placeholders with values from a properties file
         we use a custom Configurer that extends the Spring PropertyPlaceholderConfigurer -->
    <bean class="info.jtrac.util.JtracConfigurer" init-method="init"/>        

    <!-- this Acegi helper finds its way into our root Spring context 
         because JtracImpl depends on it -->
    <bean id="passwordEncoder" class="org.acegisecurity.providers.encoding.Md5PasswordEncoder"/>

    <!-- the business service tier / facade is behind an AOP interceptor (see "target" property)
         only the store* operations require transactions across multiple dao update operations -->
    <bean id="jtrac" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>        
        <property name="target">            
            <bean class="info.jtrac.JtracImpl">
                <property name="dao" ref="dao"/>
                <property name="passwordEncoder" ref="passwordEncoder"/>
                <property name="indexer" ref="indexer"/>
                <property name="indexSearcher" ref="indexSearcher"/>
            </bean>
        </property>        
        <property name="transactionAttributes">
            <props>
                <prop key="store*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="rename*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>        
    </bean>   
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>        
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
        <property name="driverClassName" value="${database.driver}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <property name="suppressClose" value="true"/>
    </bean>     

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources" value="jtrac.hbm.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>        
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>     
            </props>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
                </entry>
            </map>
        </property>
    </bean>
    
    <!-- Hibernate DAO implementation.  Transactions (AOP) have been applied at the service layer not here -->
    <bean id="dao" class="info.jtrac.hibernate.HibernateJtracDao" init-method="createSchema" destroy-method="stopEmbeddedDb">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="schemaHelper">
            <bean class="info.jtrac.hibernate.SchemaHelper">
                <property name="dataSource" ref="dataSource"/>
                <property name="mappingResources" value="jtrac.hbm.xml"/>
                <property name="driverClassName" value="${database.driver}"/>
                <property name="url" value="${database.url}"/>
                <property name="username" value="${database.username}"/>
                <property name="password" value="${database.password}"/>
                <property name="hibernateDialect" value="${hibernate.dialect}"/>      
            </bean>                
        </property>
    </bean>    
    
</beans>


