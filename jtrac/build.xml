<?xml version="1.0" encoding="UTF-8"?>
<project name="jtrac" basedir=".">
    
    <!-- example build.properties    
    watij.home=C:/peter/opt/watij-2.2.2
    tomcat.home=C:/apache-tomcat-5.5.16 [optional, jetty used by default]
    -->
    
    <property file="build.properties"/>
    <property file="build-deps.properties"/>    
    <property name="war.name" value="jtrac"/>   
    
    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>      
    </target>
    
    <target name="clean-db">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="home">
                <exclude name="jtrac.properties"/>
            </fileset>
        </delete>        
    </target>    
    
    <target name="compile" depends="dist-version-set">
        <mkdir dir="target/classes"/>
        <condition property="debug" value="false" else="true">            
            <isset property="production"/>
        </condition>
        <javac srcdir="src/main/java" destdir="target/classes" debug="${debug}" classpath="${test.jars}">
            <!-- <compilerarg value="-Xlint:unchecked"/> -->
        </javac>
        <copy todir="target/classes">
            <fileset dir="src/main/java" includes="**/*.html"/>
        </copy>         
        <copy todir="target/classes">
            <fileset dir="src/main/resources"/>
        </copy>              
    </target>           
    
    <target name="war-exploded" depends="compile">
        <war-exploded/>
    </target> 
    
    <target name="war-exploded-tomcat" depends="compile">
        <war-exploded deployDir="${tomcat.home}/webapps/${war.name}"/>
    </target>     
    
    <macrodef name="war-exploded">
        <attribute name="deployDir" default="target/${war.name}"/>
        <sequential>
            <copy todir="@{deployDir}">
                <fileset dir="src/main/webapp"/>
            </copy>
            <copy todir="@{deployDir}/WEB-INF/classes">
                <fileset dir="target/classes"/>
            </copy>
            <copy todir="@{deployDir}/WEB-INF/lib" flatten="true">
                <fileset dir="${m2.repo}" includes="${runtime.jars}" casesensitive="false"/>         
            </copy>
        </sequential>
    </macrodef>  
    
    <target name="set-production-flag">        
        <property name="production" value="true"/>
    </target>    
    
    <!-- ========================= HIBERNATE =========================== -->

    <target name="hbm-export" depends="compile">
        <input message="Hibernate Dialect:" addproperty="dialect"/>
        <java classname="org.hibernate.tool.hbm2ddl.SchemaExport" fork="true">
            <classpath>
                <path path="${test.jars}"/>
                <path path="target/classes"/>           
            </classpath>            
            <jvmarg value="-Dhibernate.dialect=${dialect}"/>
            <arg value="--text"/>
            <arg value="--delimiter=;"/>
            <arg value="--output=target/schema.sql"/>
            <arg value="src/main/resources/*.hbm.xml"/>
        </java>
    </target>       
    
    <!-- ========================== DIST ============================ -->
    
    <target name="dist-version-clean">
        <delete file="src/main/resources/version.properties"/>
    </target>
    
    <target name="dist-version-check">
        <condition property="version.missing">
            <not>
                <available file="src/main/resources/version.properties"/>
            </not>
        </condition>
    </target>
     
    <target name="dist-version-set" depends="dist-version-check" if="version.missing">
        <input message="Release Version:" addproperty="version"/>
        <tstamp/>
        <concat destfile="src/main/resources/version.properties">version=${version}${line.separator}timestamp=${DSTAMP}${TSTAMP}
        </concat>           
    </target>        
    
    <target name="war" depends="dist-version-clean, dist-version-set, war-exploded">
        <copy todir="target/${war.name}/WEB-INF" file="etc/log4j.properties" overwrite="true"/>
        <zip destfile="target/${war.name}.war" basedir="target/${war.name}"/>
    </target>
    
    <!-- TODO call "set-production-flag" after clean for version 2.0 final onwards -->
    <target name="dist-jtrac" depends="war, jetty-setup">
        <copy todir="target/jetty/logs" file="etc/dummy.txt"/>
        <copy todir="target/jetty/work" file="etc/dummy.txt"/>
        <mkdir dir="target/site/doc"/>
        <zip destfile="target/jtrac.zip">
            <zipfileset dir="target" includes="*.war" prefix="jtrac"/>
            <zipfileset dir="target/jetty" prefix="jtrac"/>
            <zipfileset dir="etc" includes="*.bat" prefix="jtrac"/>
            <zipfileset dir="etc" includes="*.bsh" prefix="jtrac/etc"/>
            <zipfileset dir="target/site/doc" prefix="jtrac/doc"/>
            <zipfileset dir="." includes="*.txt" prefix="jtrac"/>
        </zip>         
    </target>
    
    <target name="dist-war-scp" depends="clean, war">
        <input message="Please enter password:" addproperty="password"/>
        <scp file="target/jtrac.war" 
            todir="ptrthomas@shell.sourceforge.net:/home/groups/j/j-/j-trac/htdocs/files"
            password="${password}" trust="true"/>
    </target>
    
    <target name="dist-doc">
        <ant antfile="doc/build.xml"/>
    </target>
        
    <target name="dist" depends="clean, dist-doc, dist-jtrac, dist-jtrac-src"/>
    
    <target name="dist-site-clean">
        <delete includeemptydirs="true">
            <fileset dir="target/site">
                <exclude name="doc/**"/>
            </fileset>
        </delete>
    </target>
    
    <target name="dist-lib">
        <copy todir="lib">
            <fileset dir="${m2.repo}" includes="${all.jars}" casesensitive="false"/>         
        </copy>
    </target>    
    
    <target name="dist-jtrac-src">
        <mkdir dir="target"/>
        <zip destfile="target/jtrac-src.zip">
            <zipfileset dir="nbproject" prefix="jtrac/nbproject"/>
            <zipfileset dir="etc" prefix="jtrac/etc"/>
            <zipfileset dir="src" prefix="jtrac/src"/>
            <zipfileset dir="." includes="*.*" prefix="jtrac"/>
            <zipfileset dir="../antprops/src" prefix="antprops/src"/>
            <zipfileset dir="../antprops" includes="*.*" prefix="antprops"/>
        </zip>         
    </target>    
    
    <!-- ========================== TEST ============================ -->
    
    <target name="all" depends="clean, compile-test">
        <checkstyle-macro/>
        <style in="target/reports/checkstyle.xml" out="target/reports/checkstyle.html" 
        style="etc/checkstyle-noframes-sorted.xsl"/>        
        <antcall target="test-coverage"/>
    </target>
    
    <target name="compile-test" depends="compile">
        <mkdir dir="target/test-classes"/>
        <javac srcdir="src/test/java" destdir="target/test-classes" debug="true">
            <classpath>
                <path path="target/classes"/>
                <path path="${test.jars}"/>
            </classpath>
        </javac>
    </target>           
    
    <target name="test-coverage" depends="compile-test">    
        <test-macro emmaEnabled="true"/>
        <junitreport todir="target/reports">
            <fileset dir="target/reports">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="target/reports"/>
        </junitreport>        
    </target>
    
    <target name="test" depends="compile-test">
        <test-macro/>     
    </target>
    
    <target name="test-single" depends="compile-test" if="netbeans.home">
        <!-- files property expected from netbeans -->
        <fail unless="files">no files selected!</fail>      
        <test-macro includes="${files}" emmaEnabled="true" excludes="" haltonfailure="true"/>      
    </target>  
    
    <taskdef resource="emma_ant.properties" classpath="${emma.jars}"/>
    
    <macrodef name="test-macro">
        <attribute name="includes" default="**/*Test.java"/>
        <attribute name="emmaEnabled" default="false"/>
        <attribute name="excludes" default="**/watij/**/*"/>
        <attribute name="haltonfailure" default="false"/>
        <sequential>
            <mkdir dir="target/reports"/>
            <emma enabled="@{emmaEnabled}">                    
                <instr instrpath="target/classes" 
                outdir="target/instr-classes" 
                metadatafile="target/metadata.emma" merge="true"/>
            </emma>
            <copy file="etc/log4j.properties" todir="target/test-classes"/>
            <junit fork="true" dir="." tempdir="target" haltonfailure="@{haltonfailure}">
                <classpath>
                    <path path="target/instr-classes"/>
                    <path path="target/classes"/>
                    <path path="target/test-classes"/>
                    <path path="${test.jars}"/>                
                    <path path="${emma.jars}"/>
                </classpath>
                <jvmarg value="-Demma.coverage.out.file=${basedir}/target/coverage.emma"/>
                <jvmarg value="-Demma.coverage.out.merge=true"/>
                <formatter type="brief" usefile="false"/>
                <formatter type="xml"/>            
                <batchtest todir="target/reports">
                    <fileset dir="src/test/java" includes="@{includes}" excludes="@{excludes}"/>
                </batchtest>
            </junit>
            <emma enabled="@{emmaEnabled}">
                <report sourcepath="src/main/java">
                    <fileset dir="target">
                        <include name="*.emma"/>
                    </fileset>                
                    <html outfile="${basedir}/target/reports/index-coverage.html"/>
                </report>
            </emma>          
        </sequential>
    </macrodef>    
    
    <!-- ======================= CHECKSTYLE ========================= -->   
    
    <taskdef resource="checkstyletask.properties" classpath="${checkstyle.jars}"/>                      
    
    <target name="checkstyle">
        <checkstyle-macro/>
        <concat>
            <fileset dir="target/reports" includes="checkstyle.txt"/>
        </concat>
        <style in="target/reports/checkstyle.xml" out="target/reports/checkstyle.html" 
        style="etc/checkstyle-noframes-sorted.xsl"/> 
    </target>
    
    <target name="checkstyle-single" depends="compile">
        <!-- files property expected from netbeans -->
        <fail unless="files">no files selected</fail>
        <checkstyle-macro files="${files}"/>
        <concat>
            <fileset dir="target/reports" includes="checkstyle.txt"/>
        </concat>
    </target>    
    
    <macrodef name="checkstyle-macro">
        <attribute name="files" default="**/*.java"/>
        <sequential>
            <mkdir dir="target/reports"/>
            <checkstyle config="etc/checkstyle.xml" failOnViolation="false">
                <property key="checkstyle.cache.file" file="target/checkstyle-cache"/>
                <property key="checkstyle.header.file" file="etc/header.txt"/>
                <fileset dir="src/main/java" includes="@{files}"/>
                <classpath location="target/classes"/>
                <formatter type="xml" toFile="target/reports/checkstyle.xml"/>
                <formatter type="plain" toFile="target/reports/checkstyle.txt"/>
            </checkstyle>            
        </sequential>
    </macrodef> 
    
    <!-- =========================== DOC ============================ -->
    
    <target name="javadoc">
        <mkdir dir="target/api"/>
        <javadoc destdir="target/api" windowtitle="JTrac" use="true" defaultexcludes="true" breakiterator="true">
            <packageset dir="src/main/java"/>           
            <doctitle><![CDATA[<h1>JTrac API Documentation</h1>]]></doctitle>
            <bottom><![CDATA[<i>JTrac</i> - <a href="http://jtrac.info">http://jtrac.info</a>]]></bottom>
        </javadoc>
    </target>   
    
    <!-- ========================= JETTY ============================ -->    
    
    <target name="confirm">
        <input message="Are you sure?" validargs="y,n" addproperty="input"/>
        <condition property="abort">
            <equals arg1="n" arg2="${input}"/>
        </condition>
        <fail if="abort">User aborted.</fail>       
    </target>
    
    <target name="jetty-setup">
        <copy todir="target/jetty/lib" flatten="true">
            <fileset dir="${m2.repo}" includes="${jetty.jars}" casesensitive="false"/>
        </copy>
        <copy todir="target/jetty" flatten="true">
            <fileset dir="${m2.repo}" includes="${jetty.start}" casesensitive="false"/>
            <mapper type="merge" to="start.jar"/>
        </copy>        
        <copy todir="target/jetty/etc">
            <fileset dir="etc">
                <include name="jetty.xml"/>
                <include name="webdefault.xml"/>
                <include name="wrapper.conf"/>
            </fileset>
        </copy>        
        <mkdir dir="target/jetty/logs"/>
        <mkdir dir="target/jetty/work"/>        
    </target>
   
    <target name="jetty-status">
        <condition property="jetty.running">
            <socket server="localhost" port="8080"/>
        </condition>        
    </target>
    
    <target name="jetty-start" depends="war-exploded, jetty-setup">        
        <jetty-start/>
    </target>    
   
    <target name="jetty-stop" depends="jetty-status" if="jetty.running">
        <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
            <jvmarg value="-DSTOP.PORT=8079"/>
            <jvmarg value="-DSTOP.KEY=jtrac"/>
            <arg value="--stop"/>
        </java>
        <sleep seconds="2"/>
    </target>    
    
    <target name="jetty-start-debug" depends="jetty-setup, war-exploded">
        <jetty-start arg1="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n" arg2="-Xdebug"/>
    </target> 
       
    <!-- target for NetBeans Profiler on Windows -->
    <target name="jetty-start-profile" depends="war-exploded" if="netbeans.home">
        <property name="nbprof.home" value="${netbeans.home}/../profiler1/lib"/>
        <property name="agent.path" value="${nbprof.home}/deployed/jdk15/windows/profilerinterface.dll=${nbprof.home},5140"/>
        <jetty-start arg1="-agentpath:${agent.path}" arg2="-Xmx512m"/>
    </target>
    
    <macrodef name="jetty-start">
        <attribute name="webapp" default="../${war.name}"/>
        <attribute name="arg1" default=""/>
        <attribute name="arg2" default=""/>
        <sequential>
            <antcall target="jetty-stop"/>
            <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
                <jvmarg value="-Dfile.encoding=UTF-8"/>
                <jvmarg value="-Djtrac.home=${basedir}/home"/>
                <jvmarg value="-Djtrac.webapp=@{webapp}"/>
                <jvmarg value="-Dwicket.configuration=DEVELOPMENT"/>
                <jvmarg value="-DSTOP.PORT=8079"/>
                <jvmarg value="-DSTOP.KEY=jtrac"/>
                <jvmarg value="@{arg1}"/>
                <jvmarg value="@{arg2}"/>
            </java>            
        </sequential>        
    </macrodef>
    
    <!-- ========================= TOMCAT ============================ -->
    
    <target name="tomcat-clean">   
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${tomcat.home}/work/Catalina/localhost/${war.name}"/>
            <fileset dir="${tomcat.home}/webapps/${war.name}"/>                            
        </delete>     
    </target>
    
    <target name="tomcat-clean-all">
        <input message="All tomcat webapps [${tomcat.home}/webapps] will be deleted.  Are you sure?"
            validargs="y,n" addproperty="do.clean"/>
        <condition property="do.abort">
            <equals arg1="n" arg2="${do.clean}"/>
        </condition>
        <fail if="do.abort">aborted by user.</fail>        
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${tomcat.home}/work"/>
            <fileset dir="${tomcat.home}/webapps">
                <exclude name="ROOT/**"/>
            </fileset>
        </delete>   
    </target>
    
    <target name="tomcat-reload" depends="war-exploded-tomcat">
        <touch file="${tomcat.home}/webapps/${war.name}/WEB-INF/web.xml"/>
    </target>
    
    <target name="tomcat-start-debug" depends="war-exploded-tomcat">
        <java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">            
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Djtrac.home=${basedir}/home"/>           
        </java>
    </target>
    
    <target name="tomcat-stop">
        <java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <arg value="stop"/>
        </java>
    </target>
              
</project>
