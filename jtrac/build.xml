<?xml version="1.0" encoding="UTF-8"?>
<project name="jtrac" basedir=".">
    
    <!-- example build.properties
    mvn.executable=C:/peter/opt/maven-2.0.4/bin/mvn.bat
    watij.home=C:/peter/opt/watij-2.2.2 
    -->
    
    <property file="build.properties"/>
    <property file="build-deps.properties"/>	
    <property name="war.name" value="jtrac"/>   	
	
    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>      
    </target>
    
    <target name="clean-db">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="home">
                <exclude name="jtrac.properties"/>
            </fileset>
        </delete>        
    </target>    
	
    <target name="compile">
        <mkdir dir="target/classes"/>
        <condition property="debug" value="false" else="true">            
            <isset property="production"/>
        </condition>
        <javac srcdir="src/main/java" destdir="target/classes" debug="${debug}" classpath="${test.jars}"/>
        <copy todir="target/classes">
            <fileset dir="src/main/resources"/>
        </copy>              
    </target> 			
	
    <target name="war-exploded" depends="compile">
        <copy todir="target/${war.name}">
            <fileset dir="src/main/webapp"/>
        </copy>
        <copy todir="target/${war.name}/WEB-INF/classes">
            <fileset dir="target/classes"/>
        </copy>
        <copy todir="target/${war.name}/WEB-INF/lib" flatten="true">
            <fileset dir="${m2.repo}" includes="${runtime.jars}" casesensitive="false"/>         
        </copy>
    </target>  
    
    <target name="set-production-flag">        
        <property name="production" value="true"/>
    </target>    
    
    <!-- ========================= HIBERNATE =========================== -->

    <target name="hbm-export" depends="compile">
        <java classname="org.hibernate.tool.hbm2ddl.SchemaExport" fork="true">
            <classpath>
                <path path="${test.jars}"/>
                <path path="target/classes"/>        	
            </classpath>			
            <jvmarg value="-Dhibernate.dialect=org.hibernate.dialect.SybaseDialect"/>
            <arg value="--text"/>
            <arg value="--output=target/schema.sql"/>
            <arg value="src/main/resources/*.hbm.xml"/>
        </java>
    </target>	    
    
    <!-- ========================== DIST ============================ -->
    
    <!-- TODO call "set-production-flag" after clean for version 2.0 final onwards -->
    <target name="war" depends="clean, jspc">
        <copy todir="target/${war.name}/WEB-INF" file="etc/log4j.properties" overwrite="true"/>
        <zip destfile="target/${war.name}.war" basedir="target/${war.name}">
            <exclude name="**/WEB-INF/*.generated"/>
            <exclude name="**/WEB-INF/jsp/**"/>
            <exclude name="**/WEB-INF/src/**"/>          
        </zip>
    </target>
    
    <target name="dist" depends="war, jetty-setup">
        <ant antfile="doc/build.xml"/>
        <zip destfile="target/jtrac.zip">
            <zipfileset dir="target" includes="*.war" prefix="jtrac"/>
            <zipfileset dir="target/jetty" prefix="jtrac">
                <exclude name="lib/ant*.jar"/>
                <exclude name="lib/core*.jar"/>
            </zipfileset>
            <zipfileset dir="etc" includes="*.bat" prefix="jtrac"/>
            <zipfileset dir="target/site/doc" prefix="jtrac/doc"/>
            <zipfileset dir="." includes="*.txt" prefix="jtrac"/>
        </zip>         
    </target>
    
    <!-- ========================== TEST ============================ -->
	
    <target name="all" depends="clean, compile-test">
        <checkstyle-macro/>
        <style in="target/reports/checkstyle.xml" out="target/reports/checkstyle.html" 
        style="etc/checkstyle-noframes-sorted.xsl"/>        
        <antcall target="test-coverage"/>
    </target>
	
    <target name="compile-test" depends="compile">
        <mkdir dir="target/test-classes"/>
        <javac srcdir="src/test/java" destdir="target/test-classes" debug="true">
            <classpath>
                <path path="target/classes"/>
                <path path="${test.jars}"/>
            </classpath>
        </javac>
    </target> 			
    
    <target name="test-coverage" depends="compile-test">    
        <test-macro emmaEnabled="true"/>
        <junitreport todir="target/reports">
            <fileset dir="target/reports">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="target/reports"/>
        </junitreport>        
    </target>
    
    <target name="test" depends="compile-test">
        <test-macro/>     
    </target>
    
    <target name="test-single" depends="compile-test">
    	<!-- files property expected from netbeans -->
        <fail unless="files">no files selected!</fail>      
        <test-macro includes="${files}" emmaEnabled="true" excludes=""/>      
    </target>    
    
    <taskdef resource="emma_ant.properties" classpath="${emma.jars}"/>
    
    <macrodef name="test-macro">
        <attribute name="includes" default="**/*Test.java"/>
        <attribute name="emmaEnabled" default="false"/>
        <attribute name="excludes" default="**/watij/**/*"/>
        <sequential>
            <mkdir dir="target/reports"/>
            <emma enabled="@{emmaEnabled}">                    
                <instr instrpath="target/classes" 
                outdir="target/instr-classes" 
                metadatafile="target/metadata.emma" merge="true"/>
            </emma>
            <copy file="etc/build.log4j.properties" tofile="target/test-classes/log4j.properties"/>
            <junit fork="true" dir="." tempdir="target">
                <classpath>
                    <path path="target/instr-classes"/>
                    <path path="target/classes"/>
                    <path path="target/test-classes"/>
                    <path path="${test.jars}"/>                
                    <path path="${emma.jars}"/>
                </classpath>
                <jvmarg value="-Demma.coverage.out.file=${basedir}/target/coverage.emma"/>
                <jvmarg value="-Demma.coverage.out.merge=true"/>
                <formatter type="brief" usefile="false"/>
                <formatter type="xml"/>            
                <batchtest todir="target/reports">
                    <fileset dir="src/test/java" includes="@{includes}" excludes="@{excludes}"/>
                </batchtest>
            </junit>
            <emma enabled="@{emmaEnabled}">
                <report sourcepath="src/main/java">
                    <fileset dir="target">
                        <include name="*.emma"/>
                    </fileset>                
                    <html outfile="${basedir}/target/reports/index-coverage.html"/>
                </report>
            </emma>          
        </sequential>
    </macrodef>
	
    <!-- ======================== MAVEN ============================ -->

    <target name="mvn-antprops">
        <input message="Connect to external repositories?" validargs="y,n" addproperty="do.online"/>
        <condition property="offline.flag" value="-o" else="">
            <equals arg1="n" arg2="${do.online}"/>
        </condition>		
        <exec executable="${mvn.executable}">
            <arg line="antprops:generate ${offline.flag}"/>
        </exec>
    </target>    
    
    <!-- ======================= CHECKSTYLE ========================= -->	
	
    <taskdef resource="checkstyletask.properties" classpath="${checkstyle.jars}"/>	                	
	
    <target name="checkstyle">
        <checkstyle-macro/>
        <concat>
            <fileset dir="target/reports" includes="checkstyle.txt"/>
        </concat>
        <style in="target/reports/checkstyle.xml" out="target/reports/checkstyle.html" 
        style="etc/checkstyle-noframes-sorted.xsl"/> 
    </target>
    
    <target name="checkstyle-single" depends="compile">
        <!-- files property expected from netbeans -->
        <fail unless="files">no files selected</fail>
        <checkstyle-macro files="${files}"/>
        <concat>
            <fileset dir="target/reports" includes="checkstyle.txt"/>
        </concat>
    </target>    
	
    <macrodef name="checkstyle-macro">
        <attribute name="files" default="**/*.java"/>
        <sequential>
            <mkdir dir="target/reports"/>
            <checkstyle config="etc/checkstyle.xml" failOnViolation="false">
                <property key="checkstyle.cache.file" file="target/checkstyle-cache"/>
                <property key="checkstyle.header.file" file="etc/header.txt"/>
                <fileset dir="src/main/java" includes="@{files}"/>
                <classpath location="target/classes"/>
                <formatter type="xml" toFile="target/reports/checkstyle.xml"/>
                <formatter type="plain" toFile="target/reports/checkstyle.txt"/>
            </checkstyle>            
        </sequential>
    </macrodef>	
	
    <!-- =========================== DOC ============================ -->
	
    <target name="javadoc">
        <mkdir dir="target/api"/>
        <javadoc destdir="target/api" windowtitle="JTrac" use="true" defaultexcludes="true" breakiterator="true">
            <packageset dir="src/main/java"/>           
            <doctitle><![CDATA[<h1>JTrac API Documentation</h1>]]></doctitle>
            <bottom><![CDATA[<i>JTrac</i> - <a href="http://jtrac.info">http://jtrac.info</a>]]></bottom>
        </javadoc>
    </target>
	
    <!-- ========================== JSPC ============================ -->
    
    <target name="jspc" depends="war-exploded">
        <taskdef classname="org.apache.jasper.JspC" name="jasper2"> 
            <classpath id="jspc.classpath"> 
                <pathelement location="${java.home}/../lib/tools.jar"/> 
                <fileset dir="${tomcat.home}/bin"> 
                    <include name="*.jar"/> 
                </fileset> 
                <fileset dir="${tomcat.home}/server/lib"> 
                    <include name="*.jar"/> 
                </fileset> 
                <fileset dir="${tomcat.home}/common/lib"> 
                    <include name="*.jar"/> 
                </fileset>
            </classpath> 
        </taskdef> 
        <jasper2 validateXml="false" uriroot="target/${war.name}" 
            webXmlFragment="target/${war.name}/WEB-INF/web.xml.generated" 
            outputDir="target/${war.name}/WEB-INF/src"/>
        <javac destdir="target/${war.name}/WEB-INF/classes"
            optimize="off"
            debug="on" failonerror="false"
            srcdir="target/${war.name}/WEB-INF/src" 
            excludes="**/*.smap">
            <classpath>
                <pathelement location="target/${war.name}/WEB-INF/classes"/>
                <fileset dir="target/${war.name}/WEB-INF/lib">
                    <include name="*.jar"/>
                </fileset>
                <pathelement location="${tomcat.home}/common/classes"/>
                <fileset dir="${tomcat.home}/common/lib">
                    <include name="*.jar"/>
                </fileset>
                <pathelement location="${tomcat.home}/shared/classes"/>
                <fileset dir="${tomcat.home}/shared/lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${tomcat.home}/bin"> 
                    <include name="*.jar"/> 
                </fileset> 
            </classpath>
            <include name="**"/>
            <exclude name="tags/**"/>
        </javac>             
        <loadfile property="web.xml.generated" srcFile="target/${war.name}/WEB-INF/web.xml.generated"/>
        <replace file="target/${war.name}/WEB-INF/web.xml" value="${web.xml.generated}" token="&lt;!-- JSPC_TOKEN --&gt;"/>        
    </target>
    
    <!-- ========================= JETTY ============================ -->        
    
    <target name="jetty-deploy-jspc" depends="jetty-setup, jspc">      
        <copy todir="target/jetty/webapp">
            <fileset dir="target/${war.name}">
                <exclude name="**/WEB-INF/*.generated"/>
                <exclude name="**/WEB-INF/jsp/**"/>
                <exclude name="**/WEB-INF/src/**"/>
            </fileset>
        </copy>
    </target>
    
    <target name="jetty-setup">
        <copy todir="target/jetty/lib" flatten="true">
            <fileset dir="${m2.repo}" includes="${jetty.jars}" casesensitive="false"/>
        </copy>
        <copy todir="target/jetty" flatten="true">
            <fileset dir="${m2.repo}" includes="${jetty.start}" casesensitive="false"/>
            <mapper type="merge" to="start.jar"/>
        </copy>
        <copy todir="target/jetty/etc">
            <fileset dir="etc">
                <include name="jetty.xml"/>
                <include name="webdefault.xml"/>
                <include name="wrapper.conf"/>
            </fileset>
        </copy>        
        <mkdir dir="target/jetty/logs"/>
        <mkdir dir="target/jetty/work"/>        
    </target>
    
    <target name="jetty-start" depends="jetty-setup, war-exploded">        
        <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Djtrac.home=${basedir}/home"/>
            <jvmarg value="-Djtrac.webapp=../${war.name}"/>
        </java>
    </target>    
    
    <target name="jetty-start-jspc" depends="jetty-deploy-jspc">
        <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Djtrac.home=${basedir}/home"/>
            <jvmarg value="-Djtrac.webapp=webapp"/>
        </java>
    </target>
   
    <target name="jetty-stop">
        <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">            
            <arg value="--stop"/>
        </java>        
    </target>    
	
    <target name="jetty-start-debug" depends="jetty-deploy-jspc">
        <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Djtrac.home=${basedir}/home"/>
            <jvmarg value="-Djtrac.webapp=webapp"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>            
        </java>
    </target> 
       
    <!-- target for NetBeans Profiler on Windows -->
    <target name="jetty-start-profile" depends="jetty-deploy-jspc">
        <property name="nbprof.home" value="${netbeans.home}/../profiler1/lib"/>
        <property name="agent.path" value="${nbprof.home}/deployed/jdk15/windows/profilerinterface.dll=${nbprof.home},5140"/>        
        <java jar="target/jetty/start.jar" fork="true" dir="target/jetty">
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Djtrac.home=${basedir}/home"/>
            <jvmarg value="-Djtrac.webapp=webapp"/>
            <jvmarg value="-agentpath:${agent.path}"/>
            <jvmarg value="-Xmx512m"/>            
        </java>
    </target>	
              
</project>
